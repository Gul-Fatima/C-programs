#include <iostream>
#include <conio.h>
using namespace std;

int print_matrix(int matrix[3][3], int rows, int cols) {
    for (int i = 0; i < rows; ++i) {
        for (int j = 0; j < cols; ++j) {
            cout << matrix[i][j] << " ";
        }
        cout << endl;
    }
}
void multiplyMatrices(int mat1[3][3], int mat2[3][3], int result[3][3], int rows1, int cols1, int cols2) {
    for (int i = 0; i < rows1; ++i) {
        for (int j = 0; j < cols2; ++j) {
            result[i][j] = 0;
            for (int k = 0; k < cols1; ++k) {
                result[i][j] += mat1[i][k] * mat2[k][j];
            }
        }
    }
}
int main() {
    int rows1, cols1, rows2, cols2;

    // Input dimensions of matrices
    cout << "Enter number of rows and columns for matrix 1: ";
    cin >> rows1 >> cols1;

    cout << "Enter number of rows and columns for matrix 2: ";
    cin >> rows2 >> cols2;

    if (cols1 != rows2) {
        cout << "Matrix multiplication not possible. Number of columns in matrix 1 must be equal to number of rows in matrix 2." << endl;
        return 1;
    }
    int mat1[3][3], mat2[3][3], result[3][3];
    // elements of matrix 1
    cout << "Enter elements of matrix 1:" << endl;
    for (int i = 0; i < rows1; ++i) {
        for (int j = 0; j < cols1; ++j) {
            cin >> mat1[i][j];
        }
    }
    // elements of matrix 2
    cout << "Enter elements of matrix 2:" << endl;
    for (int i = 0; i < rows2; ++i) {
        for (int j = 0; j < cols2; ++j) {
            cin >> mat2[i][j];
        }
    }
    multiplyMatrices(mat1, mat2, result, rows1, cols1, cols2);
    cout << "Resultant Matrix:" << endl;
    print_matrix(result, rows1, cols2);
    _getch(); 
    return 0;
}
